% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap.R
\name{get_CI}
\alias{get_CI}
\title{Bootstrap-based confidence intervals}
\usage{
get_CI(ipw_res, data, n_boot, conf_level = 0.95)
}
\arguments{
\item{ipw_res}{Output from the \code{ipw} function.}

\item{data}{Data frame containing the observed data}

\item{n_boot}{Numeric scalar specifying the number of bootstrap replicates to use}

\item{conf_level}{Numeric scalar specifying the confidence level for the confidence intervals. The default is \code{0.95}.}
}
\value{
A list that includes the following components:
\item{res_dif}{A data frame containing the estimates and confidence intervals for the average treatment effect. The \eqn{k}th row corresponds to the \eqn{k}th time point.}
\item{res_z0}{A data frame containing the estimates and confidence intervals for the counterfactual mean under \eqn{Z=0}. The \eqn{k}th row corresponds to the \eqn{k}th time point.}
\item{res_z1}{A data frame containing the estimates and confidence intervals for the counterfactual mean under \eqn{Z=1}. The \eqn{k}th row corresponds to the \eqn{k}th time point.}
\item{res_z0_boot_all}{A data frame containing the estimates of the counterfactual mean under \eqn{Z=0} in each bootstrap replicate. The columns correspond to the time points, and the rows correspond to the bootstrap replicates.}
\item{res_z1_boot_all}{A data frame containing the estimates of the counterfactual mean under \eqn{Z=1} in each bootstrap replicate. The columns correspond to the time points, and the rows correspond to the bootstrap replicates.}
}
\description{
This function applies nonparametric bootstrap to construct confidence intervals around the counterfactual mean estimates obtained by \code{\link{ipw}}.
}
\details{
Additional description of the method
}
\examples{
res_est <- ipw(data = data_null,
               pooled = TRUE,
               A_model = A ~ L + Z,
               R_model_numerator = R ~ L0 + Z,
               R_model_denominator = R ~ L + A + Z,
               Y_model = Y ~ L0 * (t0 + Z))
res_ci <- get_CI(ipw_res = res_est, data = data_null, n_boot = 10)
res_ci$res_dif


}
